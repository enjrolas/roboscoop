/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                 */
/* file: a6500.tea                                                 */
/*                                                                 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                 */
/* description: Routines for interfacing to the Polaroid 6500	   */
/*              ranging module.                                    */
/*                                                                 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                 */
/*        docs: Documentation can be found in the BrainStem        */
/*              Reference under the major topic "TEA"              */
/*                                                                 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*                                                                 */
/* Copyright 1994-2008. Acroname Inc.                              */
/*                                                                 */
/* This software is the property of Acroname Inc.  Any             */
/* distribution, sale, transmission, or re-use of this code is     */
/* strictly forbidden except with permission from Acroname Inc.    */
/*                                                                 */
/* To the full extent allowed by law, Acroname Inc. also excludes  */
/* for itself and its suppliers any liability, wheither based in   */
/* contract or tort (including negligence), for direct,            */
/* incidental, consequential, indirect, special, or punitive       */
/* damages of any kind, or for loss of revenue or profits, loss of */
/* business, loss of information or data, or other financial loss  */
/* arising out of or in connection with this software, even if     */
/* Acroname Inc. has been advised of the possibility of such       */
/* damages.                                                        */
/*                                                                 */
/* Acroname Inc.                                                   */
/* www.acroname.com                                                */
/* 720-564-0373                                                    */
/*                                                                 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#ifndef _a6500_T_
#define _a6500_T_

#include <aIOPorts.tea>

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * a6500_Setup
 *
 * purpose: sets ECHO as an input with
 *          edge timer, 1-0 transition.
 *
 *   using: you must define to pre-processor defines prior to 
 *	    including this file.  They are:
 *
 *		a6500_INIT - the digital port number the INIT
 *			     line is plugged into.
 *		a6500_ECHO - the digital port number the ECHO
 *			     line is plugged into. Remember this
 *			     line needs a ~4.7k Ohm pull-up.
 */

void a6500_Setup()
{
  asm {
    // configure the INIT output
    pushlb	0b00000000
    popbm	aPortDigital + (aPortDigitalBlockSize * a6500_INIT) + aOffsetDigitalConfig

    // configure the ECHO input
    pushlb	0b00001001
    popbm	aPortDigital + (aPortDigitalBlockSize * a6500_ECHO) + aOffsetDigitalConfig
  }
} /* a6500_Setup */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * a6500_ReadInt
 *
 * purpose: Takes a reading from the 6500 and returns
 *	    the value as an int.
 */

int a6500_ReadInt()
{
  int val=0;

  asm {
    // bring the INIT line up
    pushlb	1
    popbm	aPortDigital + (aPortDigitalBlockSize * a6500_INIT) + aOffsetDigitalIO

    // await the echo from pin 3
    pushms	aPortDigital + (aPortDigitalBlockSize * a6500_ECHO) + aOffsetDigitalPTime

    // stall before bringing the INIT low
    pushls	1000
    popsm	aPortVMTimer

    // drop the INIT line to finish
    pushlb	0
    popbm	aPortDigital + (aPortDigitalBlockSize * a6500_INIT) + aOffsetDigitalIO

    // pop the result into val
    popss	2
  }

  return val;

} /* a6500_ReadInt */

#endif /* _a6500_T_ */
