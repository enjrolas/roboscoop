June 15, 2004

CONTENTS:

1.  CHANGES IN BUILD 5 LIBRARY
2.  CHANGES IN BUILD 10 LIBRARY
3.  CHANGES IN BUILD 13 LIBRARY
4.  CHANGES IN BUILD 14 LIBRARY
5.  CHANGES IN BUILD 18 LIBRARY
6.  CHANGES IN BUILD 20 LIBRARY
7.  CHANGES IN BUILD 21 LIBRARY
8.  CHANGES IN BUILD 22 LIBRARY



================================================================================================
1.  CHANGES IN BUILD 5 LIBRARY


------------------------------------------------------------------------------------------------
Redundant routines removed from aDigIO.tea (now called aDig.tea):

aDigital_Config0
aDigital_Config1
aDigital_Config2
aDigital_Config3
aDigital_Config4
aDigital_Read_Int0
aDigital_Read_Int1
aDigital_Read_Int2
aDigital_Read_Int3
aDigital_Read_Int4
aDigital_ReadTmr1
aDigital_ReadTmr2
aDigital_ReadTmr3
aDigital_ReadTmr4
aDigital_Write0
aDigital_Write1
aDigital_Write2
aDigital_Write3
aDigital_Write4
aServo_Write0
aServo_Write1
aServo_Write2
aServo_Write3

Redundant routines removed from aMoServo.tea (now called aMo.tea):

forward
reverse
turnleft
turnright

Redundant routines removed from aMulti.tea:

aRun
aRunInt


LATEST LIBRARY NAME AND FUNCTION DECLARATIONS		OLD FUNCTION NAME AND OLD LOCATION
------------------------------------------------------------------------------------------------
*** a6500 ***

void a6500_Setup()					-
int a6500_ReadInt()					a6500_Read_Int


------------------------------------------------------------------------------------------------
*** aA2D.tea ***  NEW

int aA2D_ReadInt(char index)				aAnalog_Read_Int (was in aCore)
char aA2D_ReadChar(char index)				new


------------------------------------------------------------------------------------------------
*** aCompass.tea ***

int aCompass_ReadInt()					aCompass_Read_Int
char aCompass_ReadChar()				aCompass_Read_Char


------------------------------------------------------------------------------------------------
*** aCore.tea ***

void aCore_Sleep(int delay)				sleep
char aCore_Inportc(int port)            new
void aCore_Outportc(int port, char a)   new
int aCore_Inporti(int port)             new
void aCore_Outporti(int port, int a)    new


------------------------------------------------------------------------------------------------
*** aDig.tea ***  (formerly aDigIO.tea)

void aDig_Config(char index, char flags)		aDig_Config          (was in aDigIO)
int aDig_ReadInt(char index)				aDigital_Read_Int    (was in aDigIO)
char aDig_ReadChar(char index)				new
int aDig_ReadAllInt()					aDigital_ReadAll_Int (was in aDigIO)
int aDig_ReadTmr(char index)				aDigital_ReadTmr     (was in aDigIO)
void aDig_Write(char index, char data)			aDigital_Write       (was in aDigIO)


------------------------------------------------------------------------------------------------
*** aGP.tea ***  NEW

int aGP_ReadGP2D02()					aIR02_Read_Int       (was in aDigIO)


------------------------------------------------------------------------------------------------
*** aLCD.tea ***  NEW

void aLCD_Byte(unsigned char a)         new
void aLCD_IntDec(int a)					new
void aLCD_IntUdec(int a)				new
void aLCD_IntHex(int a)					new
void aLCD_CharDec(char a)				new
void aLCD_CharUdec(char a)				new
void aLCD_CharHex(char a)				new
void aLCD_String(string s)				new


------------------------------------------------------------------------------------------------
*** aMo.tea ***  (formerly aMoServo.tea)

void aMo_Init()						mod_servo_init (was in aMoServo)
void aMo_Go(char spdl, char spdr)			moto           (was in aMoServo)
void aMo_Scoot(char spdl, char spdr, int time)		scoot          (was in aMoServo)
void aMo_Steer(char maxspd, char minspd, char dir)	steer          (was in aMoServo)
void aMo_HugIter(int range, int setpt, int side)	wall_hug_iter  (was in aMoServo)


------------------------------------------------------------------------------------------------
*** aMulti.tea ***

int aMulti_Run00(char fileID, char ProcID)					new
int aMulti_Run10(char fileID, char ProcID, char c1)				new
int aMulti_Run11(char fileID, char ProcID, char c1, int i1)			new
int aMulti_Run12(char fileID, char ProcID, char c1, int i1, int i2)		new
int aMulti_Run13(char fileID, char ProcID, char c1, int i1, int i2, int i3)	new
void aMulti_Halt(char callingProcID, int retval)				aSendHalt
void aMulti_Spawn(char fileID, char ProcID)					aSpawn
void aMulti_Kill(char ProcID)							aKill
void aMulti_Signal(int proc, int data)						aSignalSemaphore
int aMulti_Wait()								aWaitForSemaphore
void aMulti_PadWrChar(char x, char c)						new
char aMulti_PadRdChar(char x)							new
void aMulti_PadWrInt(char x, int n)						new
int aMulti_PadRdInt(char x)							new


------------------------------------------------------------------------------------------------
*** aPPRK.tea ***

void aPPRK_go(char s1, char s2, char s3, char r)	new


------------------------------------------------------------------------------------------------
*** aPrint.tea ***  NEW

void aPrint_String(string s)				display_string    (was in aCore)
void aPrint_Char(char c)				display_char      (was in aCore)
void aPrint_CharBin(char x)				display_char_bin  (was in aCore)
void aPrint_CharDec(char x)				display_char_dec  (was in aCore)
void aPrint_CharUdec(char x)				display_char_udec (was in aCore)
void aPrint_CharHex(char x)				display_char_hex  (was in aCore)
void aPrint_IntBin(int x)				display_int_bin   (was in aCore)
void aPrint_IntDec(int x)				display_int_dec   (was in aCore)
void aPrint_IntUdec(int x)				display_int_udec  (was in aCore)
void aPrint_IntHex(int x)				display_int_hex   (was in aCore)


------------------------------------------------------------------------------------------------
*** aServo.tea ***

char aServo_Count()						-
void aServo_SetConfig(char servo, unsigned char config)		-
unsigned char aServo_GetConfig(char servo)			-
void aServo_SetLimits(char servo, int limits)			-
int aServo_GetLimits(char servo)				-
void aServo_SetAbsolute(char servo, unsigned char position)	-
unsigned char aServo_GetAbsolute(char servo)			-
void aServo_Relative(char servo, char offset)			-
void aServo_SetReflex(char servo, unsigned int reflex)		-
unsigned int aServo_GetReflex(char servo)			-
void aServo_Stop(char servo)					-
void aServo_Write(char index, char data)			aServo_Write (was in aDigIO)

------------------------------------------------------------------------------------------------
*** aSRF04.tea ***

void aSRF04_Setup()						-
int aSRF04_ReadInt()						aSRF04_Read_Int


------------------------------------------------------------------------------------------------
*** aStash.tea *** NEW

void aStash_ByteGo()						aStashByte   (was in aMulti)		
void aStash_ByteWr(char ProcID, char index, unsigned char data)	aStashByteWr (was in aMulti)
unsigned char aStash_ByteRd(char ProcID, char index)		aStashByteRd (was in aMulti)





================================================================================================
2.  CHANGES IN BUILD 10 LIBRARY


------------------------------------------------------------------------------------------------
*** aLCDx.tea ***  NEW (alternate library for different style of LCD display)

void aLCDx_Byte(unsigned char a)		new
void aLCDx_Cmd(unsigned char a)			new
void aLCDx_IntDec(int a)				new
void aLCDx_IntUdec(int a)				new
void aLCDx_IntHex(int a)				new
void aLCDx_CharDec(char a)				new
void aLCDx_CharUdec(char a)				new
void aLCDx_CharHex(char a)				new
void aLCDx_String(string s)				new


------------------------------------------------------------------------------------------------
*** aPad.tea ***  NEW

aPad_WriteChar(char padIndex, char c)	new
aPad_ReadChar(char padIndex)			new
aPad_WriteInt(char padIndex, int n)		new
aPad_ReadInt(char padIndex)				new

------------------------------------------------------------------------------------------------
*** aReflex.tea ***  NEW

void aReflex_TriggerChar(unsigned char vectorIndex, char param)	new


------------------------------------------------------------------------------------------------
*** aMulti.tea ***  MODIFIED

void aMulti_PadWrChar(char x, char c)	moved to aPad_WriteChar(char padIndex, char c)
char aMulti_PadRdChar(char x)			moved to aPad_ReadChar(char padIndex)
void aMulti_PadWrInt(char x, int n)		moved to aPad_WriteInt(char padIndex, int n)
int aMulti_PadRdInt(char x)				moved to aPad_ReadInt(char padIndex)

(macros are included in aMulti to map old names to new names for backwards compatibility)




================================================================================================
3.  CHANGES IN BUILD 13 LIBRARY


------------------------------------------------------------------------------------------------
*** aIOPorts.tea ***  UPDATED (new motion control ports)

------------------------------------------------------------------------------------------------
*** aMotionDefs.tea ***  NEW (defines for motion control routines)

------------------------------------------------------------------------------------------------
*** aMotoModule.tea ***  NEW (defines specific to Moto 1.0 module)

------------------------------------------------------------------------------------------------
*** aMotoReflexes.tea ***  NEW (defines specific to Moto 1.0 module reflexes)

------------------------------------------------------------------------------------------------
*** aSP03.tea ***  NEW (library for Devantech SP03 speech synthesizer)

char aSP03_CheckCompletion()                    new
void aSP03_WaitForCompletion()                  new
void aSP03_SpeakPhrase(unsigned char nPhrase)   new
void aSP03_SpeakString(unsigned char nVolume,   new
		       unsigned char nPitch,
		       unsigned char nSpeed,
		       string s)
void aSP03_SpeakInt(unsigned char nVolume,      new
		       unsigned char nPitch,
		       unsigned char nSpeed,
		       int n)


------------------------------------------------------------------------------------------------
*** aMotion.tea ***  NEW (library for motion control routines)

int aMotion_GetConfig(char ch, char code)                   new
void aMotion_SetConfig(char ch, char code, int param)       new
void aMotion_SetRampParam(char code, char ch, int param)    new
int aMotion_GetRampParam(char code, char ch)                new
void aMotion_SaveParameters(char channel)                   new
void aMotion_RampEnable(char channel, char enable)          new
(macro)	aMotion_SetMode(channel, modeIndex, flags)          new
(macro)	aMotion_GetMode(channel)                            new
(macro)	aMotion_GetFlags(channel)                           new
(macro)	aMotion_SetSetpoint(channel,position)               new
(macro)	aMotion_GetSetpoint(channel)                        new
(macro)	aMotion_SetParameter(channel, paramIndex, param)    new
(macro)	aMotion_GetParameter(channel, paramIndex)           new
(macro)	aMotion_PeekSet(channel)                            new
(macro)	aMotion_PeekInput(channel)                          new
(macro)	aMotion_PeekPWM(channel)                            new
(macro)	aMotion_SetRampTarget(channel,posH,posL)            new
(macro)	aMotion_GetRampTargetH(channel)                     new
(macro)	aMotion_GetRampTargetL(channel)                     new
(macro)	aMotion_SetRampVel(channel,maxVelocity)             new
(macro)	aMotion_GetRampVel(channel)                         new
(macro)	aMotion_SetRampAccStepTime(channel,accsteptime)     new
(macro)	aMotion_GetRampAccStepTime(channel)                 new
(macro)	aMotion_SetRampFlags(channel,flags)                 new
(macro)	aMotion_GetRampFlags(channel)                       new
(macro)	aMotion_SetEnc32(channel, enc32H, enc32L)           new
(macro)	aMotion_GetEnc32H(channel)                          new
(macro)	aMotion_GetEnc32L(channel)                          new
void aMotion_SetVelocity(int v0, int v1)                    new
void aMotion_SetRampVelocity(int v0, int v1)                new
void aMotion_RampVelSteer(int maxspd, int minspd, int dir)  new
void aMotion_VelSteer(int maxspd, int minspd, int dir)      new



================================================================================================
4.  CHANGES IN BUILD 14 LIBRARY

------------------------------------------------------------------------------------------------
*** aOOPic.tea ***  NEW

void aOOPic_WriteChar(char oopic, char addr, char mask, char data)  new
char aOOPic_ReadChar(char oopic, char addr)                         new
void aOOPic_WriteInt(char oopic, char addr, char mask, int data)    new
int aOOPic_ReadInt(char oopic, char addr)                           new



================================================================================================
5.  CHANGES IN BUILD 18 LIBRARY

------------------------------------------------------------------------------------------------
*** aDump.tea ***  NEW

void aDump_String(string s)  new
void aDump_Char(char c)      new
void aDump_CharBin(char x)   new
void aDump_CharDec(char x)   new
void aDump_CharUdec(char x)  new
void aDump_CharHex(char x)   new
void aDump_IntBin(int x)     new
void aDump_IntDec(int x)     new
void aDump_IntUdec(int x)    new
void aDump_IntHex(int x)     new

*** aI2C.tea ***  NEW

void aI2C_WriteChar(char addr, char reg, char data)                     new
void aI2C_WriteInt(char addr, char reg, int data)                       new
void aI2C_Write3(char addr, char reg, char a, char b, char c)           new
void aI2C_Write4(char addr, char reg, char a, char b, char c, char d)   new
char aI2C_ReadChar(char addr, char reg)                                 new
int aI2C_ReadInt(char addr, char reg)                                   new

*** aIRCM.tea ***  NEW

(macro) aIRCM_SetLocalAddr(addr, data)	new
(macro) aIRCM_SetDestAddr(addr, data)	new
(macro) aIRCM_SetTimeout(addr, data)	new
(macro) aIRCM_SetRWData(addr, data)     new
(macro) aIRCM_SetExtData(addr, x, data) new
(macro) aIRCM_GetRWStatus(addr)         new
(macro) aIRCM_GetRWError(addr)          new
(macro) aIRCM_GetRRStatus(addr)         new
(macro) aIRCM_GetRRError(addr)          new
(macro) aIRCM_GetRRNode(addr)           new
(macro) aIRCM_GetRRData(addr)           new
(macro) aIRCM_GetRRWord(addr)           new
(macro) aIRCM_GetRemoteStatus(addr)     new
(macro) aIRCM_GetIRCMStatus(addr)       new
(macro) aIRCM_GetExtDataFlags(addr)     new
(macro) aIRCM_GetExtData(addr, x, data) new
(macro) aIRCM_GetRCStatus(addr)         new
(macro)	aIRCM_GetRCWord1(addr)          new
(macro)	aIRCM_GetRCWord2(addr)          new
char aIRCM_Transmit(char addr, char dest, char timeout, char data)  new


================================================================================================
6.  CHANGES IN BUILD 20 LIBRARY

------------------------------------------------------------------------------------------------
UPDATED/NEW MACRO                       OLD DEFINITION OF MACRO
(macro) aIRCM_GetExtData(addr, x)       (macro) aIRCM_GetExtData(addr, x, data)
(macro) aIRCM_GetRCType(addr)           new

NEW ROUTINES
void aDump_FixedIntDec(int n, char digits, char pad)    new
void aPrint_FixedIntDec(int n, char digits, char pad)   new

*** aGPM.tea ***  NEW

int aGPM_Get2DigitInt(char addr, char reg)      new
int aGPM_Get3DigitInt(char addr, char reg)      new
int aGPM_GetYear(char addr)                     new
int aGPM_GetAltitude(char addr)                 new
int aGPM_GetAnalogInput(char addr, char n)      new
(macro)	aGPM_GetHours(addr)                     new
(macro)	aGPM_GetMinutes(addr)                   new
(macro)	aGPM_GetSeconds(addr)                   new
(macro)	aGPM_GetDay(addr)                       new
(macro)	aGPM_GetMonth(addr)                     new
(macro)	aGPM_GetLatitudeDegrees(addr)           new
(macro)	aGPM_GetLatitudeMinutes(addr)           new
(macro)	aGPM_GetLatitudeFrac(addr)              new
(macro)	aGPM_GetLatitudeDirChar(addr)           new
(macro)	aGPM_GetLongitudeDegrees(addr)          new
(macro)	aGPM_GetLongitudeMinutes(addr)          new
(macro)	aGPM_GetLongitudeFrac(addr)             new
(macro)	aGPM_GetLongitudeDirChar(addr)          new
(macro)	aGPM_GetGPSQuality(addr)                new
(macro)	aGPM_GetSatellitesInUse(addr)           new
(macro)	aGPM_GetTrueHeading(addr)               new
(macro)	aGPM_GetTrueHeadingFrac(addr)           new
(macro)	aGPM_GetMagHeading(addr)                new
(macro)	aGPM_GetMagHeadingFrac(addr)            new
(macro)	aGPM_GetSpeed(addr)                     new
(macro)	aGPM_GetSpeedFrac(addr)                 new
(macro) aGPM_GetSatelliteID(addr, n)            new
(macro) aGPM_GetSatelliteSignalLevel(addr, n)   new
(macro) aGPM_DigitalInput(addr)                 new
(macro) aGPM_PositionFound(addr)                new
(macro)	aGPM_SetPortDir(addr, dir)              new
(macro)	aGPM_SetPortBits(addr, bits)            new


================================================================================================
7.  CHANGES IN BUILD 21 LIBRARY

------------------------------------------------------------------------------------------------

*** aPPRK.tea ***

NEW ROUTINES
void aPPRK_Vel(char s1, char s2, char s3, char r)  new
void aPPRK_Go(char s1, char s2, char s3, char r)   operation changed
int aPPRK_RangeCM(char i)                          new


================================================================================================
8.  CHANGES IN BUILD 22 LIBRARY

------------------------------------------------------------------------------------------------

*** aWWDefs.tea *** NEW
*** aWWEnc.tea *** NEW

NEW ROUTINES
aWWEnc.tea can be run as a separate process to monitor
two Wheel Watcher quadrature encoder units.

*** aGPM ***

Changed some names to match naming format:

NEW NAME			OLD NAME
aGPM_GetDigitalIO		aGPM_DigitalInput
aGPM_GetPosFoundFlag		aGPM_PositionFound

Added one new subroutine call:

NEW ROUTINE
(macro) aGPM_GetStatus(addr)
